{"version":3,"sources":["components/component/Card.js","components/Profile.js","components/Career.js","components/Skill.js","components/Project.js","components/Presentation.js","config.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","props","className","concat","react_default","a","createElement","children","Profile","_ref","_ref$profileImg","profileImg","undefined","_ref$githubAccountId","githubAccountId","_ref$email","email","_ref$phone","phone","component_Card","react","src","alt","index_esm","href","io_index_esm","renderItem","item","index","key","name","duration","description","Career","_ref$careers","careers","map","Skill","_ref$skills","skills","contribution","etc","Project","_ref$projects","projects","Presentation","_ref$presentations","presentations","config","profile","App","components_Profile","components_Skill","components_Career","components_Presentation","components_Project","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aae424fd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = props => {\n    const className = props.className ? `card ${props.className}` : 'card';\n    return (\n        <div className={className}>\n            {props.children}\n        </div>\n    )\n}\n\nCard.propTypes = {\n    className : PropTypes.string,\n    children : PropTypes.element,\n}\n\nexport default Card;","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types';\nimport { GoMarkGithub } from 'react-icons/go'\nimport { IoIosMail, IoIosPhonePortrait } from 'react-icons/io';\nimport { Card } from './component';\n\nconst Profile = ({profileImg = undefined, githubAccountId = '', email = undefined, phone = undefined}) => {\n    return (\n        <Card className=\"profile\">\n            <Fragment>\n                <div className=\"banner\">\n                    <div className=\"image-container\">\n                        {\n                            profileImg ? <img src={profileImg} alt=\"프로필 사진\"/>\n                            : <GoMarkGithub/>\n                        }\n                        \n                    </div>\n                    <span className=\"nickname\">{githubAccountId}</span>\n                    <div>\n                        <a href={`https://github.com/${githubAccountId}`}><GoMarkGithub /></a>\n                    </div>\n                    <div className=\"contact\">\n                        {(email || phone) && (<ul>\n                            {email && <li><IoIosMail />{email} </li>}\n                            {phone && <li><IoIosPhonePortrait /> {phone} </li>}\n                        </ul>)}\n                    </div>\n                </div>\n                <div className=\"description\">\n                    깡패신입 함 되보고싶다 ㅠ\n                </div>\n            </Fragment>\n        </Card>\n    )\n}\n\nProfile.propTypes = {\n    profileImg: PropTypes.string,\n    githubAccountId: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string\n};\n\nexport default Profile;","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport { Card } from './component';\n\n\nconst renderItem = (item, index) => (\n    <li key={index}>\n        <div className=\"language\">\n            <div>{item.name}</div> \n            <div>{item.duration}</div>\n        </div>\n        <div className=\"description\">{item.description}</div>\n    </li>\n)\n\nconst Career = ({careers = []}) => {\n    return (\n        <Card className=\"career\">\n            <Fragment>\n                <h2>Experience</h2>\n                <ul>\n                    {careers.map(renderItem) }\n                </ul>\n            </Fragment>\n        </Card>\n    )\n}\n\nCareer.propTypes = {\n    careers: PropTypes.array.isRequired\n}\n\nexport default Career;\n\n\n","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types';\nimport { Card } from './component';\n\n\nconst renderItem = (item, index) => (\n    <li key={index}>\n        {item}\n    </li>\n)\n\nconst Skill = ({skills = []}) => {\n    return(\n        <Card className=\"skill\">\n            <Fragment>\n                <h2>Skills</h2>\n                <ul>{skills.map(renderItem)}</ul>\n            </Fragment>\n        </Card>\n    )\n}\n\nSkill.propTypes = {\n    skills: PropTypes.array\n}\n\nexport default Skill;","import React, {Fragment} from 'react'\nimport { Card } from './component';\n\nconst renderEtc = (etc) => (\n    <Fragment>\n        <h4 className=\"subtitle\">참고</h4>\n        <ul className=\"etc\">\n            {etc.map((item, index) => (<li key={index} ><a href={item}>{item}</a></li>))}\n        </ul>\n    </Fragment>\n)\n\nconst renderItem = (item, index) => (\n    <li key={index}>\n        <h3 className=\"title\">{item.name}</h3>\n        <div>진행 기간 : {item.duration} </div>\n        <h4 className=\"subtitle\">내용</h4>\n        <div className=\"description\">{item.description}</div>\n        <h4 className=\"subtitle\">기여</h4>\n        <div className=\"description\">{item.contribution}</div>\n        <h4 className=\"subtitle\">사용 스킬 혹은 지식</h4>\n        <ul className=\"skills\">\n            {item.skills.map((item, index) => (<li key={index}>{item}</li>))}\n        </ul>\n        {item.etc && renderEtc(item.etc)}\n    </li>\n)\n\nconst Project = ({projects = []}) => {\n    return(\n        <Card className=\"project\">\n            <Fragment>\n                <h2>Project</h2>\n                <ul>{projects.map(renderItem)}</ul>\n            </Fragment>\n        </Card>\n    )\n}\n\nexport default Project;","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types';\nimport { Card } from './component';\n\n\nconst renderEtc = (etc) => (\n    <Fragment>\n        <h4 className=\"subtitle\">참고</h4>\n        <ul className=\"etc\">\n            {etc.map((item, index) => (<li key={index} ><a href={item}>{item}</a></li>))}\n        </ul>\n    </Fragment>\n)\nconst renderItem = (item, index) => (\n    <li key={index}>\n        <h3 className=\"title\">{item.name}</h3>\n        <div>진행 기간 : {item.duration} </div>\n        <h4 className=\"subtitle\">내용</h4>\n        <div className=\"description\">{item.description}</div>\n        <h4 className=\"subtitle\">기여</h4>\n        <div className=\"description\">{item.contribution}</div>\n        <h4 className=\"subtitle\">사용 스킬 혹은 지식</h4>\n        <ul className=\"skills\">\n            {item.skills.map((item, index) => (<li key={index}>{item}</li>))}\n        </ul>\n        {item.etc && renderEtc(item.etc)}\n    </li>\n)\n\nconst Presentation = ({presentations = []}) => {\n    return(\n        <Card className=\"presentation\">\n            <Fragment>\n                <h2>Presentation</h2>\n                <ul>{presentations.map(renderItem)}</ul>\n            </Fragment>\n        </Card>\n    )\n}\n\nPresentation.propTypes = {\n    presentations: PropTypes.array\n}\n\nexport default Presentation;","const config = {\n    profile: {\n        githubAccountId: \"aerain\",\n        profileImg: \"https://avatars3.githubusercontent.com/u/11453924?s=460&v=4\",\n        email: \"j40f893@gmail.com\",\n        phone: \"+82) 10-2309-3537\"\n    },\n    skills: [\n        \"JAVA\", \n        \"Spring Framework\", \n        \"Android\",\n        \"HTML5/CSS3/JavaScript(ES6+)\", \n        \"React.js\", \n        \"React-Native\", \n        \"Git\", \n        \"Node.js\"\n    ],\n    careers: [\n        {\n            name: \"Jeju National Univ. System Software Lab\",\n            duration: \"2017.05 ~\",\n            description: \"시스템 소프트웨어 연구실에 학생연구원으로 있습니다. 산학협력사업에 관련한 일들을 진행하고 있습니다. 현재는 반려견, 소 목장등 동물들과 관련한 연구를 진행중입니다.\"\n        },\n        {\n            name: \"Kakao Assistant (제주스마트팀 FE) \",\n            duration: \"2019.07 ~\",\n            description: \"카카오 제주스마트 팀에서 제주위드카카오 프론트엔드 개발 어시스턴트로 근무 중입니다. 사이트의 OpenGraph 관련 메타태그 처리를 담당했습니다.\"\n        }\n    ],\n    presentations: [\n        {\n            name: \"제주도 데이터 사이언스 캐글 밋업\",\n            duration: \"2019.01 ~ 2019.03\",\n            description: \"캐글 플랫폼을 활용한 데이터 사이언스와 자기가 분석하고 싶은 데이터를 분석하고, 이를 데이터 사이언스에 관심있는 도민들에게 발표하는 자리를 가졌습니다.\",\n            contribution: \"League Of Legends API를 사용하여 특정 사용자의 데이터를 크롤링하고, Pandas, Matplotlib 를 사용해 분석하였습니다.\",\n            skills: [\"Node.js\", \"Python\", \"Pandas\", \"Sklearn\", \"Matplotlib\"],\n            etc: [\"https://docs.google.com/presentation/d/16K9oEVgYCa2dv3vnP1ioWNT2TESMNXjcg8ZqrrF1al8/edit?usp=sharing\"],\n        }\n    ],\n    projects: [\n        {\n            name: \"제대로 가자\",\n            duration: \"2017.09 ~ 2018.11\",\n            description: `기존에 서비스 되던 제주대 꿀팁 앱의 개발자 선배님이 졸업하셔서 이에 ui 개편과 유지보수를 직접 하기 위해 개발하였습니다. 제주대 내 학생 식당, 기숙사식당 주간 메뉴, 도서 좌석 등, 제주대학교 학생들이 알아두면 좋은 꿀팁들을 모았습니다. \n            \n            Play Store에 현재 업로드중이며, App Store 게시는 학생이 부담하기엔 높은 가격이어서 잠시 보류중입니다.`,\n            contribution: \"PM을 맡아 UX/UI 개발, 제주대 사이트 크롤링 등 전반적인 핵심 코어를 개발하였습니다\",\n            skills: [\"React-Native\", \"ES6+\", \"Android\", \"iOS\"],\n            etc: [\n                \"https://play.google.com/store/apps/details?id=com.jedaeroreactnative\",\n                \"https://github.com/aerain/jedaeroReactNative\"\n            ],\n        }, \n        {\n            name: \"제주대학교 컴퓨터공학전공 코드 페스티벌\",\n            duration: \"2018.10.27 ~ 2018.11.26\",\n            description: `컴퓨터공학전공 학생들을 대상으로 한 알고리즘 웹 플랫폼입니다. \n            사용자는 부여받은 아이디와 비밀번호를 입력하여 로그인하면, 학년별로 배정받은 알고리즘 문제를 풀 수 있습니다.\n            알고리즘 문제를 풀고나서 제출하면, 코드의 내용은 전부 파일시스템에 저장되고, 정답을 맞출경우에는 DB에 반영되어 자신이 맞춘 문제 수를 확인할 수 있습니다.`,\n            contribution: \"PM을 맡아 UX/UI 전반과 언어별 컴파일 로직등의 코어 개발을 맡았습니다.\",\n            skills: [\"SpringBoot\", \"Thymeleaf\", \"HTML5/CSS3/JavaScript(ES6+)\", \"AJAX\"],\n            etc: [\"https://github.com/JNU-CE-Code-Festival/Server\"],\n        }, \n        {\n            name: \"알바톡 - 알바준비생을 위한 정보 관리 지원 앱.\",\n            duration: \"2019.01 ~ 2019.02\",\n            description: `데스크탑에서 알바천국, 알바몬 홈페이지를 파싱하여 카톡으로 알바 내용을 빠르게 공유해 줄 수 있는 크롬 확장 앱입니다. \n            알바천국, 알바몬 홈페이지가 아닐경우에는 별도의 메신저가 필요없이 내게 쓰기로 메모를 보낼 수 있습니다. 또한 알바 급여 정보를 계산할 수 있게 지원해 주는 기능도 제공합니다.`,\n            contribution: \"React와 SPA에 대한 개발 전반을 담당하였습니다.\",\n            skills: [\"React.js\", \"SPA\", \"Chrome Extension\"],\n            etc: [\n                \"https://albatalk.github.io\",\n                \"https://chrome.google.com/webstore/detail/%EC%95%8C%EB%B0%94%ED%86%A1/mfbbbkcmgjogfeoapgheljkhobflkmde\",\n                \"https://github.com/hebal400/hebal400.github.io\",\n                \"https://github.com/hebal400/lookingforalba\"\n            ],\n        }, \n        {\n            name: \"무형 물품 판매를 위한 Ticket Solution\",\n            duration: \"2017.05 ~ 2018.08\",\n            description: `행사 티켓 등의 무형 물품 판매를 위한 통합 플랫폼입니다. \n            중소벤처기업부 주관 국책사업의 산학협력으로 서울의 한 기업과 협업하여 개발하였습니다. \n            \n            일반 구매자를 위한 플랫폼이 아니라, GMarket, 11st, TicketMonster, Coupang 등의 다양한 오픈마켓에서 티켓을 판매하는 판매자들을 위한 무형 상품을 통합 관리 서비스입니다. 또한 특정 장소에서 바코드 스캐너등의 기기를 사용할 수 없을 때 핸드폰으로 발권된 쿠폰의 사용 처리를 간편하게 작업할 수 있습니다.`,\n            contribution: \"모바일 Front-End의 전반적인 개발을 맡았으며 AWS SDK 를 사용하여 앱과 연동할 수 있게 개발하였습니다.\",\n            skills: [\"React-Native\", \"JavaScript(ES6+)\", \"Cognito\", \"DynamoDB\"],\n            etc: [\"https://play.google.com/store/apps/details?id=com.jedaeroreactnative\"],\n        },\n        {\n            name: \"BLE Beacon을 활용한 반려견 위치 추적 시스템\",\n            duration: \"2017.08~ 2018.08\",\n            description: `집 안에 세 개의 BLE 비콘을 부착하면, 비콘에서 송출하는 RSSI 신호와 TxPower를 분석하여 세 비콘과 반려견과의 각 거리를 구합니다. 구해낸 세 거리를 통하여 삼변 측량을 통해 좌표를 계산하고 이를 서버에 POST하면, 서버에서 이를 받아 반려견의 현재 위치를 그려주는 시스템입니다.`,\n            contribution: \"RSSI 신호 안정화를 위한 소프트웨어 필터링을 맡았고, 테스트를 위한 안드로이드 앱을 개발하였습니다.\",\n            skills: [\"JAVA\", \"Android\", \"Android BLE\", \"Kalman-Filter\", \"Moving-Average\", \"iBeacon GATT specification\"],\n            etc: [\"https://play.google.com/store/apps/details?id=com.jedaeroreactnative\"],\n        }\n    ]\n}\n\nexport default config;","import React, { Fragment } from 'react';\nimport '../styles/App.css';\nimport { Profile, Career, Skill, Project, Presentation } from '.';\nimport config from '../config.js';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Profile \n        {...config.profile}\n      />\n      <Skill \n        skills={config.skills}\n      />\n      <Career \n        careers={config.careers}\n      />\n      <Presentation \n        presentations={config.presentations}\n      />\n      <Project \n        projects={config.projects}\n      />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport {App} from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}