{"version":3,"sources":["components/component/Card.js","components/Profile.js","components/Career.js","components/Skill.js","components/Project.js","components/Presentation.js","components/Education.js","config.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","props","className","concat","react_default","a","createElement","children","Profile","_ref","_ref$profileImg","profileImg","undefined","_ref$githubAccountId","githubAccountId","_ref$email","email","_ref$phone","phone","_ref$description","description","_ref$github","github","component_Card","react","src","alt","index_esm","href","io_index_esm","Object","prototype","toString","call","renderItem","item","index","key","name","duration","Career","_ref$careers","careers","map","Skill","_ref$skills","skills","contribution","images","etc","Project","_ref$projects","projects","_useState","useState","_useState2","slicedToArray","fold","setFold","icon","iconDescription","onClick","Presentation","_ref$presentations","presentations","Education","_ref$educations","educations","config","profile","App","components_Profile","Array","isArray","components_Skill","components_Education","components_Career","components_Presentation","components_Project","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c94a5b43.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = props => {\r\n    const className = props.className ? `card ${props.className}` : 'card';\r\n    return (\r\n        <div className={className}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    className : PropTypes.string,\r\n    children : PropTypes.element,\r\n}\r\n\r\nexport default Card;","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { GoMarkGithub } from 'react-icons/go'\r\nimport { IoIosMail, IoIosPhonePortrait } from 'react-icons/io';\r\nimport { Card } from './component';\r\n\r\nconst Profile = ({profileImg = undefined, githubAccountId = '', email = undefined, phone = undefined, description = \"\", github = \"\"}) => {\r\n    return (\r\n        <Card className=\"profile\">\r\n            <Fragment>\r\n                <div className=\"banner\">\r\n                    <div className=\"image-container\">\r\n                        {\r\n                            profileImg ? <img src={profileImg} alt=\"프로필 사진\"/>\r\n                            : <GoMarkGithub/>\r\n                        }\r\n                        \r\n                    </div>\r\n                    <span className=\"nickname\">{githubAccountId}</span>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                    <div className=\"contact\">\r\n                        <ul>\r\n                            {github && <li><a href={`https://github.com/${githubAccountId}`}><GoMarkGithub />{github} </a></li>}\r\n                            {email && <li><IoIosMail />{email} </li>}\r\n                            {phone && <li><IoIosPhonePortrait /> {phone} </li>}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"description\">\r\n                    {Object.prototype.toString.call(description) === '[object String]' && description}\r\n                </div>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    profileImg: PropTypes.string,\r\n    githubAccountId: PropTypes.string,\r\n    email: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    description: PropTypes.string,\r\n};\r\n\r\nexport default Profile;","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        <div className=\"language\">\r\n            <div>{item.name}</div> \r\n            <div>{item.duration}</div>\r\n        </div>\r\n        <div className=\"description\">{item.description}</div>\r\n    </li>\r\n)\r\n\r\nconst Career = ({careers = []}) => {\r\n    return (\r\n        <Card className=\"career\">\r\n            <Fragment>\r\n                <h2>Experience</h2>\r\n                <ul>\r\n                    {careers.map(renderItem) }\r\n                </ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nCareer.propTypes = {\r\n    careers: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Career;\r\n\r\n\r\n","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        {item}\r\n    </li>\r\n)\r\n\r\nconst Skill = ({skills = []}) => {\r\n    return(\r\n        <Card className=\"skill\">\r\n            <Fragment>\r\n                <h2>Skills</h2>\r\n                <ul>{skills.map(renderItem)}</ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nSkill.propTypes = {\r\n    skills: PropTypes.array\r\n}\r\n\r\nexport default Skill;","import React, {Fragment, useState} from 'react'\r\nimport { Card } from './component';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io'\r\n\r\nconst renderEtc = (etc) => (\r\n    <Fragment>\r\n        <h4 className=\"subtitle\">참고</h4>\r\n        <ul className=\"etc\">\r\n            {etc.map((item, index) => (<li key={index} ><a href={item}>{item}</a></li>))}\r\n        </ul>\r\n    </Fragment>\r\n)\r\n\r\nconst renderImg = (images) => (\r\n    <div className=\"image-container\">\r\n        {images.map((item, index) => (\r\n            <img key={index} src={item} alt=\"그림\" />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nconst renderItem = (item, index) => {\r\n    return (\r\n        <li key={index}>\r\n            <h3 className=\"title\">{item.name}</h3>\r\n            <div>진행 기간 : {item.duration} </div>\r\n            <h4 className=\"subtitle\">내용</h4>\r\n            <div className=\"description\">{item.description}</div>\r\n            <h4 className=\"subtitle\">기여</h4>\r\n            <div className=\"description\">{item.contribution}</div>\r\n            <h4 className=\"subtitle\">사용 스킬 혹은 지식</h4>\r\n            <ul className=\"skills\">\r\n                {item.skills.map((item, index) => (<li key={index}>{item}</li>))}\r\n            </ul>\r\n            {item.images && renderImg(item.images)}\r\n            {item.etc && renderEtc(item.etc)}\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Project = ({projects = []}) => {\r\n    const [fold, setFold] = useState(true);\r\n    let className = fold ? \"project fold\" : \"project\";\r\n    let icon = fold ? <IoIosArrowDown /> : <IoIosArrowUp />;\r\n    let iconDescription = fold ? \"펼치기\" : \"접기\";\r\n    return(\r\n        <Card className={className}>\r\n            <Fragment>\r\n                <header>\r\n                    <h2>Project</h2>\r\n                    <button onClick={() => setFold(!fold)}>{iconDescription}&nbsp;{icon}</button>\r\n                </header>\r\n                <ul>{projects.map(renderItem)}</ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Project;","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderEtc = (etc) => (\r\n    <Fragment>\r\n        <h4 className=\"subtitle\">참고</h4>\r\n        <ul className=\"etc\">\r\n            {etc.map((item, index) => (<li key={index} ><a href={item}>{item}</a></li>))}\r\n        </ul>\r\n    </Fragment>\r\n)\r\n\r\nconst renderImg = (images) => (\r\n    <div className=\"image-container\">\r\n        {images.map((item, index) => (\r\n            <img key={index} src={item} alt=\"그림\" />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        <h3 className=\"title\">{item.name}</h3>\r\n        <div>진행 기간 : {item.duration} </div>\r\n        <h4 className=\"subtitle\">내용</h4>\r\n        <div className=\"description\">{item.description}</div>\r\n        <h4 className=\"subtitle\">기여</h4>\r\n        <div className=\"description\">{item.contribution}</div>\r\n        <h4 className=\"subtitle\">사용 스킬 혹은 지식</h4>\r\n        <ul className=\"skills\">\r\n            {item.skills.map((item, index) => (<li key={index}>{item}</li>))}\r\n        </ul>\r\n        {item.images && renderImg(item.images)}\r\n        {item.etc && renderEtc(item.etc)}\r\n    </li>\r\n)\r\n\r\nconst Presentation = ({presentations = []}) => {\r\n    return(\r\n        <Card className=\"presentation\">\r\n            <Fragment>\r\n                <h2>Presentation</h2>\r\n                <ul>{presentations.map(renderItem)}</ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nPresentation.propTypes = {\r\n    presentations: PropTypes.array\r\n}\r\n\r\nexport default Presentation;","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        <div className=\"language\">\r\n            <div>{item.name}</div> \r\n            <div>{item.duration}</div>\r\n        </div>\r\n        <div className=\"description\">{item.description}</div>\r\n    </li>\r\n)\r\n\r\nconst Education = ({educations = []}) => {\r\n    return (\r\n        <Card className=\"education\">\r\n            <Fragment>\r\n                <h2>Education</h2>\r\n                <ul>\r\n                    {educations.map(renderItem) }\r\n                </ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    educations: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Education;\r\n","const config = {\r\n    profile: {\r\n        githubAccountId: \"WonBeomChoi\",\r\n        email: \"cwb2310@gmail.com\",\r\n        description: \"\",\r\n        github: \"https://github.com/WonBeomChoi\"\r\n    },\r\n    skills: [\r\n        \"Python\", \r\n        \"Django\", \r\n        \"React.js\",\r\n        \"HTML5/CSS3/JavaScript\", \r\n        \"React-Native\", \r\n        \"Git\",\r\n        \"Keras\",\r\n        \"Node.js\",\r\n        \"Tensorflow\",\r\n        \"GraphQL\"\r\n    ],\r\n    educations: [\r\n        {\r\n            name: \"KakaoTrack ScholarShip, Jeju National University\",\r\n            duration: \"2017.03 ~\",\r\n            description: \"2017년부터 제주대학교와 카카오가 주관하는 Kakao트랙 교육을 받고 있습니다.\"\r\n        }\r\n    ],\r\n    careers: [\r\n        {\r\n            name: \"베트남 ICT 해외봉사\",\r\n            duration: \"2019.08.05 ~ 2019.08.21\",\r\n            description: \"베트남 박리에우 대학으로 파견되어 스마트팜 구축을 하였습니다. 데이터 시각화를 위한 DB관리,웹앱 개발 전반을 맡았습니다.\",\r\n            images:[]\r\n        }\r\n    ],\r\n    presentations: [\r\n        {\r\n            name: \"제주도 데이터 사이언스 캐글 밋업\",\r\n            duration: \"2019.01 ~ 2019.03\",\r\n            description: \"캐글 플랫폼을 활용한 데이터 사이언스 튜토리얼 밋업을 개최했습니다.평소 관심 가지고있던 머신러닝 분야에 좀 더 재미를 붙이게 되는 계기가 되었습니다. 분석해보고 싶은 데이터를 분석하고, 결과를 보며 즐거움을 얻었습니다. 인기 게임인 LOL(League Of Legends) 프로게이머 Faker선수의 경기를 기반으로 데이터를 분석하고 승패를 예측하는 과정을 발표했습니다.\",\r\n            contribution: \"League Of Legends API를 사용하여 데이터 수집을 한 후, python 라이브러리를 이용해 데이터 분석/시각화를 하고,  sklearn을 이용해 예측모델 생성을 하였습니다. 데이터 분석과 예측모델생성을 하는 전체적인 과정을 튜토리얼 느낌으로 구성하고 성공적으로 발표를 마쳤습니다.\",\r\n            skills: [\"Node.js\", \"Python\", \"Pandas\", \"Sklearn\", \"Matplotlib\"],\r\n            images: [\"images/meetup/meetup1.png\"],\r\n            etc: [\"https://docs.google.com/presentation/d/16K9oEVgYCa2dv3vnP1ioWNT2TESMNXjcg8ZqrrF1al8/edit?usp=sharing\"],\r\n        },\r\n        {\r\n            name: \"제주 빅데이터 사회혁신 해커톤\",\r\n            duration: \"2019.03.29~ 2019.03.30\",\r\n            description: \"제주대학교와 GDG JEJU 가 공동주최한 해커톤에 참여하였습니다. 공공데이터 사용시 느낄 수 있는 문제점에 대하여 발표하였습니다.\",\r\n            images:[]\r\n        },\r\n        {\r\n            name: \"University Machine Learning Camp in Jeju\",\r\n            duration: \"2019.07.14~2019.08.03\",\r\n            description:\"제주대학교에서 주최한 국제 대학머신러닝 캠프에 참여하고 수료하였습니다.\",\r\n            images: []\r\n        }\r\n    ],\r\n    projects: [\r\n        {\r\n            name: \"AT(Arzra Takarsen)\",\r\n            duration: \"2019.09 ~ 2019.11\",\r\n            description: ` 블록체인을 활용한 중고거래 플랫폼입니다. \r\n\r\n            기존 에스크로방식으로 이루어지는 기존의 거래방식에서 이더리움에서 지원하는 스마트 컨트렉트를 이용하여 거래를 진행하도록 했습니다. 제 3자의 거래간섭으로 인한 수수료를 줄이는 방법으로 블록체인을 도입해 보았습니다.\r\n\r\n            제 34회 제주대학교 컴퓨터공학전공 전시회 대상 수상작품입니다.`,\r\n            contribution: \"스마트 컨트렉스 서버와 연동되는 웹 개발 전반을 맡았습니다.\",\r\n            skills: [\"AWS(RDS, S3)\", \"Django\", \"BootStrap\", \"Solidity\",\"Web3.py\"],\r\n            images: [\"\"]\r\n        },{\r\n            name: \"Emotional Drawing\",\r\n            duration: \"2019.07~2019.08\",\r\n            description: ` 이미지 세그멘테이션을 통해 감정분석을 하고 배경을 감정에 맞도록 스타일 변환을 해주는 딥러닝 모델입니다. \r\n\r\n            세그멘테이션과 표정분류를 위한 데이터는 공개 데이터셋을 이용하였고, 배경이미지 생성을 위한 데이터는 Selenium을 이용해 이미지데이터를 수집하였습니다.\r\n            U-net을 이용하여 상체를 세그멘테이션을 한후 배경과 얼굴을 분리하였습니다. 분리된 얼굴에서 CNN을 이용해 표정인식을 하고. DCGAN을 이용해 만든 표정별이미지를 분리한 배경애 스타일 전송을 하였습니다.\r\n\r\n            2019 국제 대학생 머신러닝 캠프에서 진행한 개인 프로젝트 입니다.`,\r\n            contribution: \"개인 프로젝트로 진행하였습니다.\",\r\n            skills: [\"Tensorflow\",\"OpenCv\",\"Selenium\",\"BS4\"],\r\n            images: [\"\"],\r\n            etc:[\"https://docs.google.com/presentation/d/10Pym3fZLh5f3DyEJieynVGFRI4SVG7hMgvM_e_qOvnc/edit?usp=sharing\"]\r\n        },\r\n        {\r\n            name: \"마리켓(마이 리틀 티켓)\",\r\n            duration: \"2019.09 ~ 2019.11\",\r\n            description: ` 무형 상품을 위한 판매 플랫폼입니다. \r\n\r\n             판매자가 상품을 등록하면 일반 사용자가 무형 상품을 구매하여 해당 상품에 대한 쿠폰,티켓을 발급 받을 수 있고, 해당 쿠폰에 찍힌 qr코드를 찍어서 사용처리를 할 수 있습니다.\r\n             해당 프로젝트는 각자의 기술스택을 쌓고 공부하기 위해서 개발한 프로젝트입니다. 또한 DevOps의 지속적 통합, 전달을 함께 공부하고자 만든 프로젝트입니다.\r\n\r\n            제 34회 제주대학교 컴퓨터공학전공 전시회 장려상 수상작품입니다.`,\r\n            contribution: \"GraphQL서버 작업을 맡았습니다. 사용자측 앱디자인또한 담당하였습니다.\",\r\n            skills: [\"Spring WebFlux(Java)\", \"AWS(Elastic BeanStalk, Cognito, DynamoDB)\", \"GraphQL\", \"Vue.js(Nuxt.js)\", \"Travis(CI/CD)\", \"Android(RxJava, MVVM)\"],\r\n            images: [\"images/mylittleticket/prize.jpeg\", \"images/mylittleticket/teammember.jpeg\"]\r\n        },\r\n        {\r\n            name: \"제대로 가자\",\r\n            duration: \"2017.09 ~ 현재\",\r\n            description: `기존에 서비스 되던 제주대 꿀팁 앱의 개발자 선배님이 졸업하셔서 이에 ui 개편과 유지보수를 직접 하기 위해 개발하였습니다. 제주대 학사정보시스템 연동을 수행하여 시간표, 성적등을 체크할 수 있고, 그 밖에 제주대 내 학생 식당, 기숙사식당 주간 메뉴, 도서 좌석 등, 제주대학교 학생들이 알아두면 좋은 꿀팁들을 모았습니다. \r\n            \r\n            Play Store, App Store에 현재 업로드중이며, 각각 다운로드 수 900+, 300+를 기록하고있습니다.`,\r\n            contribution: \"버스 도착예상 시간/시간표, 배달음식 주문, 학교주변 식당정보, 학사일정 메뉴를 담당했습니다.\",\r\n            skills: [\"React-Native\", \"ES6+\", \"Android\", \"iOS\"],\r\n            images: [\"images/jedaero/jedaero1.png\", \"images/jedaero/jedaero2.png\", \"images/jedaero/jedaero3.png\"],\r\n            etc: [\r\n                \"https://play.google.com/store/apps/details?id=com.jedaeroreactnative\",\r\n                \"https://apps.apple.com/kr/app/%EC%A0%9C%EB%8C%80%EB%A1%9C-%EA%B0%80%EC%9E%90/id1477790014\",\r\n                \"https://github.com/jnuro/jedaero\"\r\n            ],\r\n        }\r\n    ]\r\n}\r\n\r\nexport default config;\r\n","import React, { Fragment } from 'react';\r\nimport '../styles/App.css';\r\nimport { Profile, Career, Skill, Project, Presentation, Education } from '.';\r\nimport config from '../config.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <Profile \r\n        {...config.profile}\r\n      />\r\n      { config.skills && Array.isArray(config.skills) && <Skill skills={config.skills} />}\r\n      { config.educations && Array.isArray(config.educations) && <Education educations={config.educations} /> } \r\n      { config.careers && Array.isArray(config.careers) && <Career careers={config.careers} /> } \r\n      { config.presentations && Array.isArray(config.presentations) && <Presentation presentations={config.presentations} /> }\r\n      { config.projects && Array.isArray(config.projects) && <Project projects={config.projects} /> }\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport {App} from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('container'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}